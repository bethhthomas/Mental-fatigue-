<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2023.2.3">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': ''}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="html" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="packaged" valType="str" updates="None" name="JS libs"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="fileList" updates="None" name="Resources"/>
    <Param val="True" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="norm" valType="str" updates="None" name="Units"/>
    <Param val="2022.2.1" valType="str" updates="None" name="Use version"/>
    <Param val="[1493, 933]" valType="code" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="str" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="Mental Fatigue Training Session" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="scene_camera.json" valType="file" updates="None" name="plCompanionCameraCalibration"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="instr">
      <RoutineSettingsComponent name="instr" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instr" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="js_math_fix_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="// Code to fix reference errors in JS&amp;#10;thisExp = psychoJS.experiment;&amp;#10;win = psychoJS.window;&amp;#10;event = psychoJS.eventManager;&amp;#10;Array.prototype.append = [].push;&amp;#10;shuffle = util.shuffle;&amp;#10;document.documentElement.style.cursor = 'none';&amp;#10;&amp;#10;// Math related fixes&amp;#10;//pi = Math.PI;&amp;#10;//sin = Math.sin;&amp;#10;//cos = Math.cos;&amp;#10;//sqrt = Math.sqrt;&amp;#10;randint = function(min, maxplusone) {&amp;#10;  return Math.floor(Math.random() * (maxplusone - min) ) + min;&amp;#10;}&amp;#10;shuffle = util.shuffle;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="//use strict&amp;#10;&amp;#10;// Code to fix reference errors in JS&amp;#10;thisExp = psychoJS.experiment;&amp;#10;win = psychoJS.window;&amp;#10;event = psychoJS.eventManager;&amp;#10;Array.prototype.append = [].push;&amp;#10;document.documentElement.style.cursor = 'none';&amp;#10;&amp;#10;// Math related fixes&amp;#10;//pi = Math.PI;&amp;#10;//sin = Math.sin;&amp;#10;//cos = Math.cos;&amp;#10;//sqrt = Math.sqrt;&amp;#10;randint = function(min, maxplusone) {&amp;#10;  return Math.floor(Math.random() * (maxplusone - min) ) + min;&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="js_math_fix_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="elapsed_time" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="elapsedTime = util.Clock()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="elapsedTime = new util.Clock();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="elapsed_time" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="instructions_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="instrDict = { &quot;1&quot;: &quot;Welcome to the session and thank you for volunteering to take part in this study \n\nThis session is a training session where you will learn about the different tasks that you will need to complete in the testing session.\n\n Press the right arrow on your keyboard to continue&quot;,&amp;#10;              &quot;2&quot;: &quot;If you want to quit at any point, press the escape key. If you quit your data will not be saved and you will be asked to repeat the session \n\nPlease make sure that you are sitting comfortably in a quiet environment where you will not be interrupted. There will be multiple chances for you to take rest breaks if you need to. Please also ensure that your computer is connected to a power source and will not enter sleep mode\n\n Press the right arrow to continue, or the left arrow to go back to the previous screen&quot;,&amp;#10;              &quot;3&quot;: &quot;Today you will learn four different tasks: \n\n1. AX-CPT \n2. n-back \n3. visual search \n4. mental rotation \n\n Press the right arrow to continue to the AX-CPT task instructions&quot;,&amp;#10;              &quot;4&quot;: &quot;In this task you will see a series of letters one after another \n\nFor example:\n A - W - N - X \n (where - is a blank screen)\n\n The first letter will be red \n Then there will be two white letters \n The final letter will also be red \n\n Press the right arrow to continue, or the left arrow to go back to the previous screen&quot;,&amp;#10;              &quot;5&quot;: &quot;If the first red letter is an A and the second red letter is an X, press 'k' on your keyboard. For any other combinations of letters, press 'd' \n\n For example: \n if you see A - U - N - X you should press 'k' \n if you see B - O - J - X you should press 'd' \n if you see F - D - Z - I you should press 'd' \n if you see A - L - C - Z you should press 'd' \n\n Press the right arrow to continue, or the left arrow to go back to the previous screen&quot;,&amp;#10;              &quot;6&quot;: &quot;When you respond correctly, 'correct' will appear \n\n When you respond incorrectly, 'incorrect' will appear \n\n You must respond as quickly and accurately as possible \n\n Press 'k' to begin the five minute practice session, or press the left arrow to go back to the previous screen&quot;,&amp;#10;              &quot;7&quot;: &quot;In this task, you will see a series of letters one after another. Your task is to decide whether the letter on the screen is the same as the one 3 letters ago \n\n If it is the same, press 'k' \n If if is not the same, press 'd' \n\n Press the right arrow to continue&quot;,&amp;#10;              &quot;8&quot;: &quot;For example, in the sequence: \n B - F - G - B - P - B - F \n you would press \n d - d - d - k - d - d - d \n\n Press the right arrow to continue, or the left arrow to go back to the previous screen&quot;,&amp;#10;              &quot;9&quot;: &quot;When you respond correctly, 'correct' will appear \n\n When you respond incorrectly, 'incorrect' will appear \n\n You must respond as quickly and accurately as possible \n\n Press 'k' to begin the five minute practice session, or press the left arrow to go back to the previous screen&quot;,&amp;#10;              &quot;10&quot;: &quot;In this task you will be presented with lots of letters on a page \n\n The letters will be in different places and at different angles\n\n Press the right arrow to continue&quot;,&amp;#10;              &quot;11&quot;: &quot;Your task is to press 'k' if the letter T is on the screen\n\n If the letter T is not on the screen, press 'd'\n\n Press the right arrow to continue, or the left arrow to go back to the previous screen&quot;,&amp;#10;              &quot;12&quot;: &quot;You must complete this task as quickly and accurately as possible \n\n Press 'k' to begin the five minute practice session, or press the left arrow to go back to the previous screen&quot;,&amp;#10;              &quot;13&quot;: &quot;In this task, you will see a series of pictures\n\n Each picture has two shapes in it \n\n Your task is to decide if the two shapes are the same \n\nIf the two shapes are the same, press 'k'. If the two shapes are different, press 'd' \n\nPress the right arrow to continue&quot;,&amp;#10;              &quot;14&quot;: &quot;The way the shapes are oriented will change. Here are two matching shapes that are oriented the same way:\n\n\n\n\n\n\n\n\n\nPress the right arrow to continue, or the left arrow to go back to the previous screen&quot;,&amp;#10;              &quot;15&quot;: &quot;Here are two matching shapes that are oriented differently:\n\n\n\n\n\n\n\n\n\nPress the right arrow to continue, or the left arrow to go back to the previous screen&quot;,&amp;#10;              &quot;16&quot;: &quot;Here are two shapes that do not match:\n\n\n\n\n\n\n\n\n\nPress the right arrow to continue, or the left arrow to go back to the previous screen&quot;,&amp;#10;              &quot;17&quot;: &quot;When you respond correctly, 'correct' will appear \n\n When you respond incorrectly, 'incorrect' will appear \n\n You must respond as quickly and accurately as possible \n\n Press 'k' to begin the five minute practice session, or press the left arrow to go back to the previous screen \n\n Please note there may be a delay while this task loads&quot;&amp;#10;}&amp;#10;&amp;#10;&amp;#10;currentInstr = 1" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="instrDict = {&quot;1&quot;: &quot;Welcome to the session and thank you for volunteering to take part in this study \n\nThis session is a training session where you will learn about the different tasks that you will need to complete in the testing session.\n\n Press the right arrow on your keyboard to continue&quot;, &quot;2&quot;: &quot;If you want to quit at any point, press the escape key. If you quit your data will not be saved and you will be asked to repeat the session \n\nPlease make sure that you are sitting comfortably in a quiet environment where you will not be interrupted. There will be multiple chances for you to take rest breaks if you need to. Please also ensure that your computer is connected to a power source and will not enter sleep mode\n\n Press the right arrow to continue, or the left arrow to go back to the previous screen&quot;, &quot;3&quot;: &quot;Today you will learn four different tasks: \n\n1. AX-CPT \n2. n-back \n3. visual search \n4. mental rotation \n\n Press the right arrow to continue to the AX-CPT task instructions&quot;, &quot;4&quot;: &quot;In this task you will see a series of letters one after another \n\nFor example:\n A - W - N - X \n (where - is a blank screen)\n\n The first letter will be red \n Then there will be two white letters \n The final letter will also be red \n\n Press the right arrow to continue, or the left arrow to go back to the previous screen&quot;, &quot;5&quot;: &quot;If the first red letter is an A and the second red letter is an X, press 'k' on your keyboard. For any other combinations of letters, press 'd' \n\n For example: \n if you see A - U - N - X you should press 'k' \n if you see B - O - J - X you should press 'd' \n if you see F - D - Z - I you should press 'd' \n if you see A - L - C - Z you should press 'd' \n\n Press the right arrow to continue, or the left arrow to go back to the previous screen&quot;, &quot;6&quot;: &quot;When you respond correctly, 'correct' will appear \n\n When you respond incorrectly, 'incorrect' will appear \n\n You must respond as quickly and accurately as possible \n\n Press 'k' to begin the five minute practice session, or press the left arrow to go back to the previous screen&quot;, &quot;7&quot;: &quot;In this task, you will see a series of letters one after another. Your task is to decide whether the letter on the screen is the same as the one 3 letters ago \n\n If it is the same, press 'k' \n If if is not the same, press 'd' \n\n Press the right arrow to continue&quot;, &quot;8&quot;: &quot;For example, in the sequence: \n B - F - G - B - P - B - F \n you would press \n d - d - d - k - d - d - d \n\n Press the right arrow to continue, or the left arrow to go back to the previous screen&quot;, &quot;9&quot;: &quot;When you respond correctly, 'correct' will appear \n\n When you respond incorrectly, 'incorrect' will appear \n\n You must respond as quickly and accurately as possible \n\n Press 'k' to begin the five minute practice session, or press the left arrow to go back to the previous screen&quot;, &quot;10&quot;: &quot;In this task you will be presented with lots of letters on a page \n\n The letters will be in different places and at different angles\n\n Press the right arrow to continue&quot;, &quot;11&quot;: &quot;Your task is to press 'k' if the letter T is on the screen\n\n If the letter T is not on the screen, press 'd'\n\n Press the right arrow to continue, or the left arrow to go back to the previous screen&quot;, &quot;12&quot;: &quot;You must complete this task as quickly and accurately as possible \n\n Press 'k' to begin the five minute practice session, or press the left arrow to go back to the previous screen&quot;, &quot;13&quot;: &quot;In this task, you will see a series of pictures\n\n Each picture has two shapes in it \n\n Your task is to decide if the two shapes are the same \n\nIf the two shapes are the same, press 'k'. If the two shapes are different, press 'd' \n\nPress the right arrow to continue&quot;, &quot;14&quot;: &quot;The way the shapes are oriented will change. Here are two matching shapes that are oriented the same way:\n\n\n\n\n\n\n\n\n\nPress the right arrow to continue, or the left arrow to go back to the previous screen&quot;, &quot;15&quot;: &quot;Here are two matching shapes that are oriented differently:\n\n\n\n\n\n\n\n\n\nPress the right arrow to continue, or the left arrow to go back to the previous screen&quot;, &quot;16&quot;: &quot;Here are two shapes that do not match:\n\n\n\n\n\n\n\n\n\nPress the right arrow to continue, or the left arrow to go back to the previous screen&quot;, &quot;17&quot;: &quot;When you respond correctly, 'correct' will appear \n\n When you respond incorrectly, 'incorrect' will appear \n\n You must respond as quickly and accurately as possible \n\n Press 'k' to begin the five minute practice session, or press the left arrow to go back to the previous screen \n\n Please note there may be a delay while this task loads&quot;};&amp;#10;currentInstr = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="console.log(key_resp.keys);&amp;#10;if ((key_resp.keys === &quot;left&quot;)) {&amp;#10;    currentInstr = (Number.parseInt(currentInstr) - 1);&amp;#10;} else {&amp;#10;    if ((key_resp.keys === &quot;right&quot;)) {&amp;#10;        currentInstr = (Number.parseInt(currentInstr) + 1);&amp;#10;    }&amp;#10;}&amp;#10;if ((currentInstr === 0)) {&amp;#10;    currentInstr = 1;&amp;#10;}&amp;#10;if ((currentInstr === 4)) {&amp;#10;    currentLoop.finished = true;&amp;#10;}&amp;#10;currentInstr = currentInstr.toString();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="print(key_resp.keys)&amp;#10;&amp;#10;if key_resp.keys == &quot;left&quot;:&amp;#10;    currentInstr = int(currentInstr) - 1&amp;#10;elif key_resp.keys == &quot;right&quot;:&amp;#10;    currentInstr = int(currentInstr) + 1&amp;#10;&amp;#10;if currentInstr == 0:&amp;#10;    currentInstr = 1  # can't go lower than&amp;#10;&amp;#10;if currentInstr == 4:&amp;#10;    currentLoop.finished = True&amp;#10;&amp;#10;currentInstr = str(currentInstr)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="instructions_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="centerAlignMaster" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="instrHeaderText.setAlignHoriz(&quot;center&quot;);&amp;#10;text.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_2.setAlignHoriz(&quot;center&quot;);&amp;#10;text_2.setAlignHoriz(&quot;center&quot;);&amp;#10;restBreak1Text.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_3.setAlignHoriz(&quot;center&quot;);&amp;#10;text_3.setAlignHoriz(&quot;center&quot;);&amp;#10;restBreak2Text.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_4.setAlignHoriz(&quot;center&quot;);&amp;#10;text_4.setAlignHoriz(&quot;center&quot;);&amp;#10;restBreak3Text.setAlignHoriz(&quot;center&quot;);&amp;#10;instrHeaderText_5.setAlignHoriz(&quot;center&quot;);&amp;#10;text_5.setAlignHoriz(&quot;center&quot;);&amp;#10;end_text.setAlignHoriz(&quot;center&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="instrHeaderText.setAlignHoriz('center')&amp;#10;text.setAlignHoriz('center')&amp;#10;&amp;#10;instrHeaderText_2.setAlignHoriz('center')&amp;#10;text_2.setAlignHoriz('center')&amp;#10;&amp;#10;restBreak1Text.setAlignHoriz('center')&amp;#10;&amp;#10;instrHeaderText_3.setAlignHoriz('center')&amp;#10;text_3.setAlignHoriz('center')&amp;#10;&amp;#10;restBreak2Text.setAlignHoriz('center')&amp;#10;&amp;#10;instrHeaderText_4.setAlignHoriz('center')&amp;#10;text_4.setAlignHoriz('center')&amp;#10;&amp;#10;restBreak3Text.setAlignHoriz('center')&amp;#10;&amp;#10;instrHeaderText_5.setAlignHoriz('center')&amp;#10;text_5.setAlignHoriz('center')&amp;#10;&amp;#10;end_text.setAlignHoriz('center')&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="centerAlignMaster" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="&quot;left&quot;, &quot;right&quot;" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="instrHeaderText" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Introduction" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$instrDict[currentInstr]" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="instrAXCPT">
      <RoutineSettingsComponent name="instrAXCPT" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instrAXCPT" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="elapsed_timer" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="elapsed_timer" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="console.log(key_resp_2.keys);&amp;#10;if ((key_resp_2.keys === &quot;left&quot;)) {&amp;#10;    currentInstr = (Number.parseInt(currentInstr) - 1);&amp;#10;} else {&amp;#10;    if ((key_resp_2.keys === &quot;right&quot;)) {&amp;#10;        currentInstr = (Number.parseInt(currentInstr) + 1);&amp;#10;    }&amp;#10;}&amp;#10;if ((currentInstr === 3)) {&amp;#10;    currentInstr = 4;&amp;#10;}&amp;#10;if ((currentInstr === 7)) {&amp;#10;    currentInstr = 6;&amp;#10;}&amp;#10;if ((key_resp_2.keys === &quot;k&quot;)) {&amp;#10;    currentLoop.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="print(key_resp_2.keys)&amp;#10;&amp;#10;if key_resp_2.keys == &quot;left&quot;:&amp;#10;    currentInstr = int(currentInstr) - 1&amp;#10;elif key_resp_2.keys == &quot;right&quot;:&amp;#10;    currentInstr = int(currentInstr) + 1&amp;#10;&amp;#10;if currentInstr == 3:&amp;#10;    currentInstr = 4  # can't go lower than 4&amp;#10;&amp;#10;if currentInstr == 7:&amp;#10;    currentInstr = 6  # can't go higher than 6&amp;#10;&amp;#10;if key_resp_2.keys == &quot;k&quot;:&amp;#10;    currentLoop.finished = True&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_2" plugin="None">
        <Param val="&quot;left&quot;, &quot;right&quot;, &quot;k&quot;" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText_2" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="instrHeaderText_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="AX-CPT Instructions" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_2" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$instrDict[currentInstr]" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="timer">
      <RoutineSettingsComponent name="timer" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="timer" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="timer_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="probeVal = []" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="probeVal = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if loopTimer.getTime() &gt; 120:&amp;#10;    currentLoop.finished = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((loopTimer.getTime() &gt; 120)) {&amp;#10;    currentLoop.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="timer_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="timer_text" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.3" valType="code" updates="constant" name="letterHeight"/>
        <Param val="timer_text" valType="code" updates="None" name="name"/>
        <Param val="0" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="x" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="AXCPTtrial">
      <RoutineSettingsComponent name="AXCPTtrial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="AXCPTtrial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="AXCPTtrial_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="Bletters = [&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Z&quot;];&amp;#10;Yletters = [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;Z&quot;];&amp;#10;distractors = [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Z&quot;];&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="Bletters = [&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Z&quot;];&amp;#10;Yletters = [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;Z&quot;];&amp;#10;distractors = [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Z&quot;];&amp;#10;&amp;#10;function choice(arr) {&amp;#10;  return arr[Math.floor(Math.random() * arr.length)];&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="function choice(arr) {&amp;#10;  return arr[Math.floor(Math.random() * arr.length)];&amp;#10;}&amp;#10;&amp;#10;distractor1Val = choice(distractors);&amp;#10;distractor2Val = choice(distractors);&amp;#10;if ((trialType === &quot;target&quot;)) {&amp;#10;    cueVal = &quot;A&quot;;&amp;#10;    probeVal = &quot;X&quot;;&amp;#10;} else {&amp;#10;    if ((trialType === &quot;probeWrong&quot;)) {&amp;#10;        cueVal = &quot;A&quot;;&amp;#10;        probeVal = choice(Yletters);&amp;#10;    } else {&amp;#10;        if ((trialType === &quot;cueWrong&quot;)) {&amp;#10;            cueVal = choice(Bletters);&amp;#10;            probeVal = &quot;X&quot;;&amp;#10;        } else {&amp;#10;            if ((trialType === &quot;bothWrong&quot;)) {&amp;#10;                cueVal = choice(Bletters);&amp;#10;                probeVal = choice(Yletters);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#function choice(arr) {&amp;#10;#  return arr[Math.floor(Math.random() * arr.length)];&amp;#10;#}&amp;#10;&amp;#10;distractor1Val = choice(distractors)&amp;#10;distractor2Val = choice(distractors)&amp;#10;&amp;#10;&amp;#10;&amp;#10;if trialType == 'target':&amp;#10;    cueVal = 'A'&amp;#10;    probeVal = 'X'&amp;#10;&amp;#10;elif trialType == 'probeWrong':&amp;#10;    cueVal = 'A'&amp;#10;    probeVal = choice(Yletters)&amp;#10;&amp;#10;elif trialType == 'cueWrong':&amp;#10;    cueVal = choice(Bletters)&amp;#10;    probeVal = 'X'&amp;#10;&amp;#10;elif trialType == 'bothWrong':&amp;#10;    cueVal = choice(Bletters)&amp;#10;    probeVal = choice(Yletters)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="AXCPTtrial_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="cue_text" plugin="None">
        <Param val="$[1.000,-1.000,-1.000]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="0.3" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="cue_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$cueVal" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="break1" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="break1" valType="code" updates="None" name="name"/>
        <Param val="0" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="x" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="distractor1" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="distractor1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.5" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.8" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$distractor1Val" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="break2" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="break2" valType="code" updates="None" name="name"/>
        <Param val="0" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.8" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="x" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="distractor2" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="distractor2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3.3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$distractor2Val" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="break3" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="break3" valType="code" updates="None" name="name"/>
        <Param val="0" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3.3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="x" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="AXCPTprobe">
      <RoutineSettingsComponent name="AXCPTprobe" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="AXCPTprobe" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="probe_text" plugin="None">
        <Param val="$[1.000,-1.000,-1.000]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="probe_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$probeVal" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="AXCPT_resp" plugin="None">
        <Param val="'k', 'd'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$corrResponse" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="AXCPT_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="AXCPTfeedback">
      <RoutineSettingsComponent name="AXCPTfeedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="AXCPTfeedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="AXCPTfeedback_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="msg = ' '" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="msg = &quot; &quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (AXCPT_resp.corr) {&amp;#10;    msg = &quot;Correct&quot;;&amp;#10;} else {&amp;#10;    msg = &quot;Incorrect&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if AXCPT_resp.corr:&amp;#10;    msg = &quot;Correct&quot;&amp;#10;else:&amp;#10;    msg = &quot;Incorrect&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="AXCPTfeedback_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="AXCPTfeedback_text" plugin="None">
        <Param val="$[1.000,1.000,-1.000]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="AXCPTfeedback_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="restBreak1">
      <RoutineSettingsComponent name="restBreak1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="restBreak1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="elapsed_timer_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="break1Timer = new util.Clock();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="break1Timer = util.Clock()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break1.duration&quot;, break1Timer.getTime());&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break1.duration', break1Timer.getTime())" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="elapsed_timer_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="restBreak1Text" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="code" updates="constant" name="letterHeight"/>
        <Param val="restBreak1Text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="End of AX-CPT practice&amp;#10;&amp;#10;Please rest now if you need to or press the right arrow to continue to the next task" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="restBreak1_key_resp" plugin="None">
        <Param val="['right']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="restBreak1_key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instrNBack">
      <RoutineSettingsComponent name="instrNBack" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instrNBack" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="elapsed_timer_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="elapsed_timer_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((currentInstr === 6)) {&amp;#10;    currentInstr = 7;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if currentInstr == 6:&amp;#10;    currentInstr = 7  # ensure correct instructions are showing for n-back&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="console.log(key_resp_3.keys);&amp;#10;if ((key_resp_3.keys === &quot;left&quot;)) {&amp;#10;    currentInstr = (Number.parseInt(currentInstr) - 1);&amp;#10;} else {&amp;#10;    if ((key_resp_3.keys === &quot;right&quot;)) {&amp;#10;        currentInstr = (Number.parseInt(currentInstr) + 1);&amp;#10;    }&amp;#10;}&amp;#10;if ((currentInstr === 6)) {&amp;#10;    currentInstr = 7;&amp;#10;}&amp;#10;if ((currentInstr === 10)) {&amp;#10;    currentInstr = 9;&amp;#10;}&amp;#10;if ((key_resp_3.keys === &quot;k&quot;)) {&amp;#10;    currentLoop.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="print(key_resp_3.keys)&amp;#10;&amp;#10;if key_resp_3.keys == &quot;left&quot;:&amp;#10;    currentInstr = int(currentInstr) - 1&amp;#10;elif key_resp_3.keys == &quot;right&quot;:&amp;#10;    currentInstr = int(currentInstr) + 1&amp;#10;&amp;#10;if currentInstr == 6:&amp;#10;    currentInstr = 7  # can't go lower than 7&amp;#10;&amp;#10;if currentInstr == 10:&amp;#10;    currentInstr = 9  # can't go higher than 9&amp;#10;&amp;#10;if key_resp_3.keys == &quot;k&quot;:&amp;#10;    currentLoop.finished = True&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_3" plugin="None">
        <Param val="&quot;left&quot;, &quot;right&quot;, &quot;k&quot;" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText_3" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="instrHeaderText_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="N-Back Instructions" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_3" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$instrDict[currentInstr]" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="NBackFirst3Trials">
      <RoutineSettingsComponent name="NBackFirst3Trials" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="NBackFirst3Trials" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="NBackFirst3Trials_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="Back2minus1=[]&amp;#10;Back2minus2=[]&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="Back2minus1 = [];&amp;#10;Back2minus2 = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="function choice(arr) {&amp;#10;  return arr[Math.floor(Math.random() * arr.length)];&amp;#10;}&amp;#10;&amp;#10;letters = [&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Z&quot;];&amp;#10;nletter = choice(letters);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trialType=='nonTarget':amp;#10;   "letters = ['B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Z']&amp;#10;nletter=choice(letters)&amp;#10;" if nletter==Back2minus2:&amp;#10; nletter=choice(letters)&amp;10; elif trialType=='target':&amp;#10; nletter=Back2minus1" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="Back2minus2 = Back2minus1;amp;#10;Back2minus1 = nletter;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="Back2minus2=Back2minus1&amp;#10;Back2minus1=nletter" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="NBackFirst3Trials_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="NBackText_1" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="NBackText_1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$nletter" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="NBack_resp_1" plugin="None">
        <Param val="'k', 'd'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$corrResponse" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="NBack_resp_1" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="NBackRemainderTrials">
      <RoutineSettingsComponent name="NBackRemainderTrials" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="NBackRemainderTrials" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="NBackTrials_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="function choice(arr) {&amp;#10;  return arr[Math.floor(Math.random() * arr.length)];&amp;#10;}&amp;#10;&amp;#10;if ((trialType === &quot;nonTarget&quot;)) {&amp;#10;    letters = [&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Z&quot;];&amp;#10;    nletter = choice(letters);&amp;#10;    if ((nletter === Back2minus1)) {&amp;#10;        nletter = choice(letters);&amp;#10;    }&amp;#10;    if ((nletter === Back2minus2)) {&amp;#10;        nletter = choice(letters);&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((trialType === &quot;target&quot;)) {&amp;#10;        nletter = Back2minus3;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trialType=='nonTarget':&amp;#10;    letters = ['B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Z']&amp;#10;    nletter=choice(letters)&amp;#10;    if nletter==Back2minus1:&amp;#10;            nletter=choice(letters)&amp;#10;    if nletter==Back2minus2:&amp;#10;            nletter=choice(letters)&amp;#10;elif trialType=='target':&amp;#10;    nletter=Back2minus3" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="Back2minus3 = Back2minus2;&amp;#10;Back2minus2 = Back2minus1;&amp;#10;Back2minus1 = nletter;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="Back2minus3=Back2minus2&amp;#10;Back2minus2=Back2minus1&amp;#10;Back2minus1=nletter" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="NBackTrials_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="NBackText_2" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="NBackText_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$nletter" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="NBack_resp_2" plugin="None">
        <Param val="'k', 'd'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$corrResponse" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="NBack_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="restBreak2">
      <RoutineSettingsComponent name="restBreak2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="restBreak2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="elapsed_timer_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="break2Timer = new util.Clock();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="break2Timer = util.Clock()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break2.duration&quot;, break2Timer.getTime());&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break2.duration', break2Timer.getTime())" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="elapsed_timer_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="restBreak2Text" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="code" updates="constant" name="letterHeight"/>
        <Param val="restBreak2Text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="End of N-Back practice&amp;#10;&amp;#10;Please rest now if you need to or press the right arrow to continue to the next task" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="restBreak2_key_resp" plugin="None">
        <Param val="['right']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="restBreak2_key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="restBreak3">
      <RoutineSettingsComponent name="restBreak3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="restBreak3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="elapsed_timer_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="break3Timer = new util.Clock();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="break3Timer = util.Clock()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;psychoJS.experiment.addData(&quot;break3.duration&quot;, break3Timer.getTime());&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())&amp;#10;psychoJS.experiment.addData('break3.duration', break3Timer.getTime())" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="elapsed_timer_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="restBreak3Text" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="code" updates="constant" name="letterHeight"/>
        <Param val="restBreak3Text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="End of Visual Search Practice&amp;#10;&amp;#10;Please rest now if you need to or press the right arrow to continue to the next task" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="restBreak3_key_resp" plugin="None">
        <Param val="['right']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="restBreak3_key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instrMentRot">
      <RoutineSettingsComponent name="instrMentRot" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instrMentRot" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="elapsed_timer_10" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="elapsed_timer_10" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="matchOpac = 0&amp;#10;flipOpac = 0&amp;#10;notpOpac = 0&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="matchOpac = 0;&amp;#10;flipOpac = 0;&amp;#10;notpOpac = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((currentInstr === 12)) {&amp;#10;    currentInstr = 13;&amp;#10;}&amp;#10;matchOpac = 0;&amp;#10;flipOpac = 0;&amp;#10;notpOpac = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if currentInstr == 12:&amp;#10;    currentInstr = 13  # ensure correct instructions are showing for n-back&amp;#10;&amp;#10;matchOpac = 0&amp;#10;flipOpac = 0&amp;#10;notpOpac = 0&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if currentInstr == 14:&amp;#10;            matchOpac = 1&amp;#10;            flipOpac = 0&amp;#10;            notOpac = 0&amp;#10;&amp;#10;elif currentInstr == 15:&amp;#10;            matchOpac = 0&amp;#10;            flipOpac = 1&amp;#10;            notOpac = 0&amp;#10;&amp;#10;elif currentInstr == 16:&amp;#10;            matchOpac = 0&amp;#10;            flipOpac = 0&amp;#10;            notOpac = 1&amp;#10;&amp;#10;elif currentInstr == 17:&amp;#10;            matchOpac = 0&amp;#10;            flipOpac = 0&amp;#10;            notOpac = 0&amp;#10;&amp;#10;elif currentInstr == 13:&amp;#10;            matchOpac = 0&amp;#10;            flipOpac = 0&amp;#10;            notOpac = 0&amp;#10;&amp;#10;elif currentInstr == 12:&amp;#10;            matchOpac = 0&amp;#10;            flipOpac = 0&amp;#10;            notOpac = 0&amp;#10;&amp;#10;if key_resp_5.keys == &quot;k&quot;:&amp;#10;    trials.finished = True&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((currentInstr === 14)) {&amp;#10;    matchOpac = 1;&amp;#10;    flipOpac = 0;&amp;#10;    notOpac = 0;&amp;#10;} else {&amp;#10;    if ((currentInstr === 15)) {&amp;#10;        matchOpac = 0;&amp;#10;        flipOpac = 1;&amp;#10;        notOpac = 0;&amp;#10;    } else {&amp;#10;        if ((currentInstr === 16)) {&amp;#10;            matchOpac = 0;&amp;#10;            flipOpac = 0;&amp;#10;            notOpac = 1;&amp;#10;        } else {&amp;#10;            if ((currentInstr === 17)) {&amp;#10;                matchOpac = 0;&amp;#10;                flipOpac = 0;&amp;#10;                notOpac = 0;&amp;#10;            } else {&amp;#10;                if ((currentInstr === 13)) {&amp;#10;                    matchOpac = 0;&amp;#10;                    flipOpac = 0;&amp;#10;                    notOpac = 0;&amp;#10;                } else {&amp;#10;                    if ((currentInstr === 12)) {&amp;#10;                        matchOpac = 0;&amp;#10;                        flipOpac = 0;&amp;#10;                        notOpac = 0;&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((key_resp_5.keys === &quot;k&quot;)) {&amp;#10;    trials.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="console.log(key_resp_5.keys);&amp;#10;if ((key_resp_5.keys === &quot;left&quot;)) {&amp;#10;    currentInstr = (Number.parseInt(currentInstr) - 1);&amp;#10;} else {&amp;#10;    if ((key_resp_5.keys === &quot;right&quot;)) {&amp;#10;        currentInstr = (Number.parseInt(currentInstr) + 1);&amp;#10;    }&amp;#10;}&amp;#10;if ((currentInstr === 12)) {&amp;#10;    currentInstr = 13;&amp;#10;}&amp;#10;if ((currentInstr === 18)) {&amp;#10;    currentInstr = 17;&amp;#10;}&amp;#10;if ((key_resp_5.keys === &quot;k&quot;)) {&amp;#10;    currentLoop.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="print(key_resp_5.keys)&amp;#10;&amp;#10;if key_resp_5.keys == &quot;left&quot;:&amp;#10;    currentInstr = int(currentInstr) - 1&amp;#10;elif key_resp_5.keys == &quot;right&quot;:&amp;#10;    currentInstr = int(currentInstr) + 1&amp;#10;&amp;#10;if currentInstr == 12:&amp;#10;    currentInstr = 13  # can't go lower than 10&amp;#10;&amp;#10;if currentInstr == 18:&amp;#10;    currentInstr = 17  # can't go higher than 12&amp;#10;&amp;#10;if key_resp_5.keys == &quot;k&quot;:&amp;#10;    currentLoop.finished = True&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_5" plugin="None">
        <Param val="&quot;left&quot;, &quot;right&quot;, &quot;k&quot;" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_5" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText_5" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="instrHeaderText_5" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Mental Rotation Task Instructions" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_5" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_5" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$instrDict[currentInstr]" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="MentRotMatching" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="1_0.jpg" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="MentRotMatching" valType="code" updates="None" name="name"/>
        <Param val="matchOpac" valType="code" updates="set every frame" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.935, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="MentRotMatchFlip" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="1_100.jpg" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="MentRotMatchFlip" valType="code" updates="None" name="name"/>
        <Param val="flipOpac" valType="code" updates="set every frame" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.935, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="MentRotNot" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="1_0_R.jpg" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="MentRotNot" valType="code" updates="None" name="name"/>
        <Param val="notOpac" valType="code" updates="set every frame" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.935, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="mentRotTrial">
      <RoutineSettingsComponent name="mentRotTrial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="mentRotTrial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="mentRotStimulus" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$imagefile" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="mentRotStimulus" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.935, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="7.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="MROT_resp" plugin="None">
        <Param val="'k', 'd'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$corrResponse" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="MROT_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="7.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="mentRotFeedback">
      <RoutineSettingsComponent name="mentRotFeedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="mentRotFeedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="NBackfeedback_code_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="msg = ' '" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="msg = &quot; &quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (MROT_resp.corr) {&amp;#10;    msg = &quot;Correct&quot;;&amp;#10;} else {&amp;#10;    msg = &quot;Incorrect&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if MROT_resp.corr:&amp;#10;    msg = &quot;Correct&quot;&amp;#10;else:&amp;#10;    msg = &quot;Incorrect&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="NBackfeedback_code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="NBackfeedback_text_2" plugin="None">
        <Param val="$[1.000,1.000,-1.000]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="NBackfeedback_text_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="NBackFeedback">
      <RoutineSettingsComponent name="NBackFeedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="NBackFeedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="NBackfeedback_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="msg = ' '" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="msg = &quot; &quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (NBack_resp_2.corr) {&amp;#10;    msg = &quot;Correct&quot;;&amp;#10;} else {&amp;#10;    msg = &quot;Incorrect&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if NBack_resp_2.corr:&amp;#10;    msg = &quot;Correct&quot;&amp;#10;else:&amp;#10;    msg = &quot;Incorrect&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="NBackfeedback_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="AXCPTfeedback_text_2" plugin="None">
        <Param val="$[1.000,1.000,-1.000]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="AXCPTfeedback_text_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="end">
      <RoutineSettingsComponent name="end" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="end" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="elapsed_timer_12" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="elapsed_timer_12" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="end_text" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="code" updates="constant" name="letterHeight"/>
        <Param val="end_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="End of Training Session&amp;#10;&amp;#10;Thank you for completing the training session&amp;#10;&amp;#10;Please contact the experimenter now to confirm that you have completed the training session&amp;#10;&amp;#10;They will then send you the link to the testing session which you will need to complete in 48 hours' time (2 days from now)&amp;#10;&amp;#10;Please press the space bar on your keyboard to finish the session" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="end_resp" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="end_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="createLoopTimer">
      <RoutineSettingsComponent name="createLoopTimer" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="createLoopTimer" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="create_timer_1_code_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="loopTimer = new util.Clock();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="loopTimer = util.Clock()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="create_timer_1_code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="instrSearch">
      <RoutineSettingsComponent name="instrSearch" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instrSearch" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="elapsed_timer_8" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;elapsed.time&quot;, elapsedTime.getTime());&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="psychoJS.experiment.addData('elapsed.time', elapsedTime.getTime())" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="elapsed_timer_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((currentInstr === 9)) {&amp;#10;    currentInstr = 10;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if currentInstr == 9:&amp;#10;    currentInstr = 10  # ensure correct instructions are showing for n-back&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="console.log(key_resp_4.keys);&amp;#10;if ((key_resp_4.keys === &quot;left&quot;)) {&amp;#10;    currentInstr = (Number.parseInt(currentInstr) - 1);&amp;#10;} else {&amp;#10;    if ((key_resp_4.keys === &quot;right&quot;)) {&amp;#10;        currentInstr = (Number.parseInt(currentInstr) + 1);&amp;#10;    }&amp;#10;}&amp;#10;if ((currentInstr === 9)) {&amp;#10;    currentInstr = 10;&amp;#10;}&amp;#10;if ((currentInstr === 13)) {&amp;#10;    currentInstr = 12;&amp;#10;}&amp;#10;if ((key_resp_4.keys === &quot;k&quot;)) {&amp;#10;    currentLoop.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="print(key_resp_4.keys)&amp;#10;&amp;#10;if key_resp_4.keys == &quot;left&quot;:&amp;#10;    currentInstr = int(currentInstr) - 1&amp;#10;elif key_resp_4.keys == &quot;right&quot;:&amp;#10;    currentInstr = int(currentInstr) + 1&amp;#10;&amp;#10;if currentInstr == 9:&amp;#10;    currentInstr = 10  # can't go lower than 10&amp;#10;&amp;#10;if currentInstr == 13:&amp;#10;    currentInstr = 12  # can't go higher than 12&amp;#10;&amp;#10;if key_resp_4.keys == &quot;k&quot;:&amp;#10;    currentLoop.finished = True&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_4" plugin="None">
        <Param val="&quot;left&quot;, &quot;right&quot;, &quot;k&quot;" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_4" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="instrHeaderText_4" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="instrHeaderText_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Visual Search Task Instructions" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_4" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$instrDict[currentInstr]" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="searchTrial">
      <RoutineSettingsComponent name="searchTrial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="searchTrial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="defineFunctionsSearch" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="shuffle = util.shuffle&amp;#10;&amp;#10;function choice(arr) {&amp;#10;  return arr[Math.floor(Math.random() * arr.length)];&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="defineFunctionsSearch" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="searchCode" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="orientList = [0, 90, 180, 270]&amp;#10;PosList = [[.45, -.45], [.45, -.15], [.45, .15], [.45, .45], [.15, -.45], [.15, -.15], [.15, .15], [.15, .45], [-.15, -.45], [-.15, -.15], [-.15, .15], [-.15, .45], [-.45, -.45], [-.45, -.15], [-.45, .15], [-.45, .45]]" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="orientList = [0, 90, 180, 270];&amp;#10;PosList = [[0.45, (- 0.45)], [0.45, (- 0.15)], [0.45, 0.15], [0.45, 0.45], [0.15, (- 0.45)], [0.15, (- 0.15)], [0.15, 0.15], [0.15, 0.45], [(- 0.15), (- 0.45)], [(- 0.15), (- 0.15)], [(- 0.15), 0.15], [(- 0.15), 0.45], [(- 0.45), (- 0.45)], [(- 0.45), (- 0.15)], [(- 0.45), 0.15], [(- 0.45), 0.45]];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="shuffle(PosList);&amp;#10;targetOrient = choice(orientList);&amp;#10;stim2Orient = choice(orientList);&amp;#10;stim3Orient = choice(orientList);&amp;#10;stim4Orient = choice(orientList);&amp;#10;stim5Orient = choice(orientList);&amp;#10;stim6Orient = choice(orientList);&amp;#10;stim7Orient = choice(orientList);&amp;#10;stim8Orient = choice(orientList);&amp;#10;stim9Orient = choice(orientList);&amp;#10;stim10Orient = choice(orientList);&amp;#10;stim11Orient = choice(orientList);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="shuffle(PosList)&amp;#10;&amp;#10;targetOrient = choice(orientList)&amp;#10;stim2Orient = choice (orientList)&amp;#10;stim3Orient = choice(orientList)&amp;#10;stim4Orient = choice(orientList)&amp;#10;stim5Orient = choice(orientList)&amp;#10;stim6Orient = choice(orientList)&amp;#10;stim7Orient = choice(orientList)&amp;#10;stim8Orient = choice(orientList)&amp;#10;stim9Orient = choice(orientList)&amp;#10;stim10Orient = choice(orientList)&amp;#10;stim11Orient = choice(orientList)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="searchCode" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_6" plugin="None">
        <Param val="'k', 'd'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$corrResponse" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_6" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="targetStim" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="targetStim" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="targetOrient" valType="code" updates="set every repeat" name="ori"/>
        <Param val="PosList[1]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$targetLetter" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="searchStim2" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="searchStim2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="stim2Orient" valType="code" updates="set every repeat" name="ori"/>
        <Param val="PosList[2]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="L" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="searchStim3" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="searchStim3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="stim3Orient" valType="code" updates="set every repeat" name="ori"/>
        <Param val="PosList[3]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="L" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="searchStim4" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="searchStim4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="stim4Orient" valType="code" updates="set every repeat" name="ori"/>
        <Param val="PosList[4]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="L" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="searchStim5" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="searchStim5" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="stim5Orient" valType="code" updates="set every repeat" name="ori"/>
        <Param val="PosList[5]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="L" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="searchStim6" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="searchStim6" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="stim6Orient" valType="code" updates="set every repeat" name="ori"/>
        <Param val="PosList[6]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="L" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="searchStim7" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="searchStim7" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="stim7Orient" valType="code" updates="set every repeat" name="ori"/>
        <Param val="PosList[7]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="L" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="searchStim8" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="searchStim8" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="stim8Orient" valType="code" updates="set every repeat" name="ori"/>
        <Param val="PosList[8]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="L" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="searchStim9" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="searchStim9" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="stim9Orient" valType="code" updates="set every repeat" name="ori"/>
        <Param val="PosList[9]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="L" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="searchStim10" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="searchStim10" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="stim10Orient" valType="code" updates="set every repeat" name="ori"/>
        <Param val="PosList[10]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="L" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="searchStim11" plugin="None">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="searchStim11" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="stim11Orient" valType="code" updates="set every repeat" name="ori"/>
        <Param val="PosList[11]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="L" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="searchFeedback">
      <RoutineSettingsComponent name="searchFeedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="searchFeedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="searchFeedback_code_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="msg = ' '" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="msg = &quot; &quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (key_resp_6.corr) {&amp;#10;    msg = &quot;Correct&quot;;&amp;#10;} else {&amp;#10;    msg = &quot;Incorrect&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if key_resp_6.corr:&amp;#10;    msg = &quot;Correct&quot;&amp;#10;else:&amp;#10;    msg = &quot;Incorrect&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="searchFeedback_code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="searchFeedbackText" plugin="None">
        <Param val="$[1.000,1.000,-1.000]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="searchFeedbackText" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="instrLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="100" valType="code"/>
      <Param name="name" updates="None" val="instrLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="instr"/>
    <LoopTerminator name="instrLoop"/>
    <LoopInitiator loopType="TrialHandler" name="instrAXCPTLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="100" valType="code"/>
      <Param name="name" updates="None" val="instrAXCPTLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="instrAXCPT"/>
    <LoopTerminator name="instrAXCPTLoop"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="AXCPTtrialsLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trialNumber', 1), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 2), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 3), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 4), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 5), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 6), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 7), ('trial', 'AX'), ('cueType', 'A'), ('probeType', 'X'), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trialNumber', 8), ('trial', 'BX'), ('cueType', 'B'), ('probeType', 'X'), ('trialType', 'probeWrong'), ('corrResponse', 'd')]), OrderedDict([('trialNumber', 9), ('trial', 'AY'), ('cueType', 'A'), ('probeType', 'Y'), ('trialType', 'cueWrong'), ('corrResponse', 'd')]), OrderedDict([('trialNumber', 10), ('trial', 'BY'), ('cueType', 'B'), ('probeType', 'Y'), ('trialType', 'bothWrong'), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="trialType.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="AXCPTtrialsLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="AXCPTtrial"/>
    <Routine name="AXCPTprobe"/>
    <Routine name="AXCPTfeedback"/>
    <LoopTerminator name="AXCPTtrialsLoop"/>
    <Routine name="restBreak1"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="instrNBackLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="100" valType="code"/>
      <Param name="name" updates="None" val="instrNBackLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="instrNBack"/>
    <LoopTerminator name="instrNBackLoop"/>
    <LoopInitiator loopType="TrialHandler" name="NBackTargetLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="3" valType="code"/>
      <Param name="name" updates="None" val="NBackTargetLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="NBackFirst3Trials"/>
    <LoopTerminator name="NBackTargetLoop"/>
    <LoopInitiator loopType="TrialHandler" name="NBackTrialsLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trial', 1), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trial', 2), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trial', 3), ('trialType', 'target'), ('corrResponse', 'k')]), OrderedDict([('trial', 4), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 5), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 6), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 7), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 8), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 9), ('trialType', 'nonTarget'), ('corrResponse', 'd')]), OrderedDict([('trial', 10), ('trialType', 'nonTarget'), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="2-back_loop.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="NBackTrialsLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="NBackRemainderTrials"/>
    <Routine name="NBackFeedback"/>
    <LoopTerminator name="NBackTrialsLoop"/>
    <Routine name="restBreak2"/>
    <LoopInitiator loopType="TrialHandler" name="instrSearchLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="100" valType="code"/>
      <Param name="name" updates="None" val="instrSearchLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="instrSearch"/>
    <LoopTerminator name="instrSearchLoop"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="searchLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('cond', 'target'), ('targetLetter', 'T'), ('corrResponse', 'k')]), OrderedDict([('cond', 'nonTarget'), ('targetLetter', 'L'), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="visualSearchConds.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="searchLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="searchTrial"/>
    <Routine name="searchFeedback"/>
    <LoopTerminator name="searchLoop"/>
    <Routine name="restBreak3"/>
    <LoopInitiator loopType="TrialHandler" name="instrMentRotaLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="100" valType="code"/>
      <Param name="name" updates="None" val="instrMentRotaLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="instrMentRot"/>
    <LoopTerminator name="instrMentRotaLoop"/>
    <Routine name="createLoopTimer"/>
    <LoopInitiator loopType="TrialHandler" name="mentRotTrialsLooop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('imagefile', '10_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '10_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '10_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '10_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '10_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '11_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '11_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '12_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '12_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '13_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '13_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '14_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '14_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '15_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '15_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '16_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '16_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '17_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '17_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '18_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '18_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '19_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '19_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '1_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '1_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '20_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '20_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '21_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '21_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '22_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '22_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '23_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '23_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '24_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '24_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '25_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '25_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '26_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '26_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '27_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '27_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '27_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '27_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '28_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '28_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '29_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '29_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '2_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '2_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '30_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '30_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '31_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '31_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '32_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '32_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '33_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '33_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '34_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '34_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '35_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '35_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '35_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '35_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '36_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '36_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '37_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '37_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '38_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '38_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '39_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '39_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '3_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '3_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '40_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '40_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '41_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '41_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '42_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '42_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '43_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '43_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '44_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '44_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '45_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '45_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_100.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_100_R.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_150.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_150_R.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '46_50.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '46_50_R.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_0.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '47_0_R.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '47_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '47_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '47_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '48_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '48_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '4_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '4_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '5_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '5_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '6_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '6_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '7_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '7_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '8_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '8_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_0.jpg'), ('orientation', 0), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_0_R.jpg'), ('orientation', 0), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_100.jpg'), ('orientation', 100), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_100_R.jpg'), ('orientation', 100), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_150.jpg'), ('orientation', 150), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_150_R.jpg'), ('orientation', 150), ('corrResponse', 'd')]), OrderedDict([('imagefile', '9_50.jpg'), ('orientation', 50), ('corrResponse', 'k')]), OrderedDict([('imagefile', '9_50_R.jpg'), ('orientation', 50), ('corrResponse', 'd')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="response.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6000" valType="code"/>
      <Param name="name" updates="None" val="mentRotTrialsLooop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="timer"/>
    <Routine name="mentRotTrial"/>
    <Routine name="mentRotFeedback"/>
    <LoopTerminator name="mentRotTrialsLooop"/>
    <Routine name="end"/>
  </Flow>
</PsychoPy2experiment>
